# Generated by Django 5.1 on 2024-10-23 17:05

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import stdimage.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='DrugReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_register', models.DateField(auto_now_add=True, verbose_name='Data do Registro')),
                ('report_number', models.CharField(default='', max_length=100, null=True, verbose_name='Número do Laudo')),
                ('city', models.CharField(default='Limeira', max_length=100, null=True, verbose_name='Cidade')),
                ('protocol_number', models.CharField(default='', max_length=200, null=True, verbose_name='Número do Protocolo')),
                ('occurring_number', models.CharField(default='', max_length=200, null=True, verbose_name='Número do Boletim')),
                ('designated_date', models.CharField(blank=True, max_length=200, null=True, verbose_name='Data de Designação')),
                ('exam_objective', models.CharField(default='', max_length=300, verbose_name='Objetivo do Exame')),
                ('occurrence_nature', models.CharField(default='', max_length=300, null=True, verbose_name='Natureza da Ocorrência')),
                ('police_station', models.CharField(default='', max_length=200, null=True, verbose_name='Distrito Policial')),
                ('requesting_authority', models.CharField(default='', max_length=200, null=True, verbose_name='Autoridade Requisitante')),
                ('activation_date', models.CharField(blank=True, max_length=20, null=True, verbose_name='Data do Acionamento')),
                ('activation_time', models.TimeField(blank=True, null=True, verbose_name='Hora do Acionamento')),
                ('service_date', models.CharField(blank=True, max_length=20, null=True, verbose_name='Data do Atendimento')),
                ('service_time', models.TimeField(blank=True, null=True, verbose_name='Hora do Atendimento')),
                ('director', models.CharField(default='', max_length=200, verbose_name='Diretor')),
                ('nucleus', models.CharField(default='', max_length=200, verbose_name='Núcleo')),
                ('team', models.CharField(default='', max_length=200, verbose_name='Equipe de Perícias')),
                ('reporting_expert', models.CharField(default='', max_length=200, verbose_name='Perito Relator')),
                ('assistant_expert', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Perito Assistente')),
                ('photographer', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Fotógrafo')),
                ('draftsman', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Desenhista')),
                ('considerations', models.TextField(blank=True, default='', verbose_name='Considerações')),
                ('conclusion', models.TextField(blank=True, default='', verbose_name='Conclusão')),
                ('allSubstances', models.TextField(blank=True, default='', verbose_name='Substâncias examinadas')),
                ('materialReceivedObservations', models.TextField(blank=True, default='', verbose_name='Observações sobre o material recebido')),
                ('materialImage', models.TextField(blank=True, default='', verbose_name='imagem do Material Recebido')),
                ('materialImageCaption', models.TextField(blank=True, default='', verbose_name='Legenda da fotografia do material')),
                ('listOfEnvolvedPeople', models.TextField(blank=True, default='', verbose_name='Pessoas envolvidas')),
                ('listOfPackagings', models.TextField(blank=True, default='', verbose_name='Embalagens')),
                ('listOfMorphology', models.TextField(blank=True, default='', verbose_name='Morfologia')),
                ('listOfGrossMass', models.TextField(blank=True, default='', verbose_name='Massa bruta')),
                ('listOfLiquidMass', models.TextField(blank=True, default='', verbose_name='Massa líquida')),
                ('listOfReturned', models.TextField(blank=True, default='', verbose_name='Material retornado')),
                ('listOfCounterProof', models.TextField(blank=True, default='', verbose_name='Contraperícia')),
                ('listOfEntranceSeal', models.TextField(blank=True, default='', verbose_name='Lacre de entrada')),
                ('listOfExitseal', models.TextField(blank=True, default='', verbose_name='Lacre de saída')),
                ('listOfpackagingAndMorphology', models.TextField(blank=True, default='', verbose_name='Descrição do item')),
                ('listOfResultOfExams', models.TextField(blank=True, default='', verbose_name='Resultado do exame')),
                ('listOfReturneds', models.TextField(blank=True, default='', verbose_name='Material retornado e contraperícia')),
                ('examImages', models.TextField(blank=True, default='', verbose_name='imagem do item examinado')),
                ('examImageCaptions', models.TextField(blank=True, default='', verbose_name='Legendas da imagem do item examinado')),
                ('returnedItemsImage', models.TextField(blank=True, default='', verbose_name='imagem do Material Retornado')),
                ('returnedItemsCaption', models.TextField(blank=True, default='', verbose_name='Legenda do Material retornado')),
                ('counterProofImage', models.TextField(blank=True, default='', verbose_name='imagem do material separado para contraperícia')),
                ('counterProofCaption', models.TextField(blank=True, default='', verbose_name='Legenda da contraperícia')),
            ],
            options={
                'verbose_name': 'Laudo de Drogas',
                'verbose_name_plural': 'Laudos de Drogas',
            },
        ),
        migrations.CreateModel(
            name='TheftReportModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_register', models.DateField(auto_now_add=True, verbose_name='Data do Registro')),
                ('report_number', models.CharField(default='', max_length=100, null=True, verbose_name='Número do Laudo')),
                ('city', models.CharField(default='Limeira', max_length=100, null=True, verbose_name='Cidade')),
                ('protocol_number', models.CharField(default='', max_length=200, null=True, verbose_name='Número do Protocolo')),
                ('occurring_number', models.CharField(default='', max_length=200, null=True, verbose_name='Número do Boletim')),
                ('designated_date', models.CharField(blank=True, max_length=200, null=True, verbose_name='Data de Designação')),
                ('exam_objective', models.CharField(default='', max_length=300, verbose_name='Objetivo do Exame')),
                ('occurrence_nature', models.CharField(default='', max_length=300, null=True, verbose_name='Natureza da Ocorrência')),
                ('police_station', models.CharField(default='', max_length=200, null=True, verbose_name='Distrito Policial')),
                ('requesting_authority', models.CharField(default='', max_length=200, null=True, verbose_name='Autoridade Requisitante')),
                ('activation_date', models.CharField(blank=True, max_length=20, null=True, verbose_name='Data do Acionamento')),
                ('activation_time', models.TimeField(blank=True, null=True, verbose_name='Hora do Acionamento')),
                ('service_date', models.CharField(blank=True, max_length=20, null=True, verbose_name='Data do Atendimento')),
                ('service_time', models.TimeField(blank=True, null=True, verbose_name='Hora do Atendimento')),
                ('director', models.CharField(default='', max_length=200, verbose_name='Diretor')),
                ('nucleus', models.CharField(default='', max_length=200, verbose_name='Núcleo')),
                ('team', models.CharField(default='', max_length=200, verbose_name='Equipe de Perícias')),
                ('reporting_expert', models.CharField(default='', max_length=200, verbose_name='Perito Relator')),
                ('assistant_expert', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Perito Assistente')),
                ('photographer', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Fotógrafo')),
                ('draftsman', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Desenhista')),
                ('considerations', models.TextField(blank=True, default='', verbose_name='Considerações')),
                ('conclusion', models.TextField(blank=True, default='', verbose_name='Conclusão')),
                ('preservation_context', models.TextField(blank=True, default='', verbose_name='Preservação')),
                ('localsubtitle', models.JSONField(blank=True, default=list, verbose_name='Subtítulo')),
                ('localdescription', models.JSONField(blank=True, default=list, verbose_name='Descrição')),
                ('localimgbase64', models.JSONField(blank=True, default=list, verbose_name='Imagem Base 64')),
                ('locallegend', models.JSONField(blank=True, default=list, verbose_name='Legenda da Imagem')),
            ],
            options={
                'verbose_name': 'Local de Furto',
                'verbose_name_plural': 'Locais de Furto',
            },
        ),
        migrations.CreateModel(
            name='UserRegistrationModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('director', models.CharField(default='Dr. José Carlos de Freitas Garcia Caldas', help_text='Inclua do atual Diretor, incluindo Dr. ou Dra.', max_length=255)),
                ('full_name', models.CharField(default='', help_text='Inclua o nome como deseja que apareça no laudo, incluindo Dr. ou Dra.', max_length=100, verbose_name='Nome Completo')),
                ('city', models.CharField(default='Limeira', max_length=100, verbose_name='Cidade')),
                ('unit', models.CharField(default='Núcleo de Americana', max_length=100, verbose_name='Núcleo')),
                ('team', models.CharField(default='EPC - Limeira', max_length=100, verbose_name='Equipe')),
                ('image', stdimage.models.StdImageField(blank=True, force_min_size=False, null=True, upload_to='user_images/', variations={'thumbnail': (100, 100)}, verbose_name='Imagem')),
                ('groups', models.ManyToManyField(blank=True, help_text='Groups this user belongs to.', related_name='customuser_set', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='customuser_set', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuário',
                'verbose_name_plural': 'Usuários',
                'permissions': [('can_view_custom_user', 'Can view custom user')],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='HeaderReportModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_date', models.DateField(auto_now_add=True, verbose_name='Data do Registro')),
                ('designation_date', models.DateField(default=django.utils.timezone.localdate, verbose_name='Data de Designação')),
                ('occurrence_date', models.DateField(default=django.utils.timezone.localdate, verbose_name='Data da Ocorrência')),
                ('occurrence_time', models.TimeField(default='00:00:00', null=True, verbose_name='Hora do Atendimento')),
                ('activation_date', models.DateField(default=django.utils.timezone.localdate, verbose_name='Data do Acionamento')),
                ('activation_time', models.TimeField(default='00:00:00', null=True, verbose_name='Hora do Acionamento')),
                ('service_date', models.DateField(default=django.utils.timezone.localdate, verbose_name='Data do Atendimento')),
                ('service_time', models.TimeField(default='00:00:00', null=True, verbose_name='Hora do Atendimento')),
                ('report_number', models.CharField(default='', max_length=100, null=True, verbose_name='Número do Laudo')),
                ('city', models.CharField(default='Limeira', max_length=100, null=True, verbose_name='Cidade')),
                ('protocol_number', models.CharField(default='', max_length=200, null=True, verbose_name='Número do Protocolo')),
                ('police_report_number', models.CharField(default='', max_length=200, null=True, verbose_name='Número do Boletim de Ocorrência')),
                ('examination_objective', models.CharField(default='', max_length=300, verbose_name='Objetivo do Exame')),
                ('incident_nature', models.CharField(default='', max_length=300, null=True, verbose_name='Natureza da Ocorrência')),
                ('police_station', models.CharField(default='', max_length=200, null=True, verbose_name='Distrito Policial')),
                ('requesting_authority', models.CharField(default='', max_length=200, null=True, verbose_name='Autoridade Requisitante')),
                ('institute_director', models.CharField(default='', max_length=200, verbose_name='Diretor do Instituto')),
                ('institute_unit', models.CharField(default='', max_length=200, verbose_name='Núcleo do Instituto')),
                ('forensic_team_base', models.CharField(default='', max_length=200, verbose_name='Base da Equipe de Perícias')),
                ('expert_display_name', models.CharField(default='', max_length=200, verbose_name='Perito')),
                ('photographer', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Fotógrafo')),
                ('considerations', models.TextField(blank=True, default='', verbose_name='Considerações')),
                ('conclusion', models.TextField(blank=True, default='', verbose_name='Conclusão')),
                ('reporting_expert', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Perito Relator')),
            ],
            options={
                'verbose_name': 'Relatório Pericial',
                'verbose_name_plural': 'Relatórios Periciais',
            },
        ),
        migrations.CreateModel(
            name='PropertyReportModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True, default='', verbose_name='Imóvel - Descrição')),
                ('reportForeignKey', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='property', to='myreportapp.headerreportmodel', verbose_name='Relatório Principal')),
            ],
            options={
                'verbose_name': 'Imóvel',
            },
        ),
        migrations.CreateModel(
            name='ScenePreservationReportModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True, default='', verbose_name='Preservação - Descrição')),
                ('reportForeignKey', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scene_preservations', to='myreportapp.headerreportmodel', verbose_name='Relatório Principal')),
            ],
            options={
                'verbose_name': 'Preservação de Local',
            },
        ),
    ]
